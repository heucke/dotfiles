###############################################################################
#    _
#   | |_ _ __ ___  _   ___  __
#   | __| '_ ` _ \| | | \ \/ /
#   | |_| | | | | | |_| |>  <
#    \__|_| |_| |_|\__,_/_/\_\
#
###############################################################################

# basics {{{
set -g default-command zsh

# included in tmux-sensible
set -g escape-time 0  # from 500
set -g history-limit 50000  # from 2000
set -g display-time 4000  # from 750
set -g status-interval 5  # from 15
set -g status-keys emacs
set -g focus-events on
# included in tmux-sensible

# colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ',xterm*:sitm=\E[3m'
set -ga terminal-overrides ",xterm*:Tc"
# set -g default-terminal 'tmux-256color'
# set -as terminal-overrides ',*:Tc:smxx=\E[9m:sitm=\E[3m'

# mouse support
set -g mouse on

# indicate activity in statusbar
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off

# number windows from 1
set -g base-index 1

# vi style keys
setw -g mode-keys vi

# ctrl+direction moves whole word
setw -g xterm-keys on
#}}}

# bindings {{{
# prefix
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# window management
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# make both C-a,C-n and C-a,n work
bind C-n next-window
bind C-p previous-window

# use system clipboard
# if-shell 'test "$(uname)" = "Linux"' 'source ~/.tmux-linux.conf'
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "tmux save-buffer - | pbcopy"
bind-key p run "tmux set-buffer $(pbpaste); tmux paste-buffer"

# vim-like visual selection
bind-key -T copy-mode-vi "v" send -X begin-selection

# clear screen
bind C-l send-keys 'C-l'

# vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

# reload config
bind r source-file ~/.tmux.conf
#}}}

# color scheme {{{
set -g status "on"

# default statusbar colors
set -g status-bg colour0
set -g status-fg colour7

# default window title colors
setw -g window-status-style bg=colour0,fg=colour7

setw -g window-status-activity-style bg=colour0,fg=colour7

# active window title colors
setw -g window-status-current-style bg=colour7,fg=colour0

# pane border
set -g pane-active-border-style fg=colour5
set -g pane-border-style fg=colour241

# message infos
set -g message-style bg=colour0,fg=colour7

# writting commands inactive
set -g message-command-style bg=colour0,fg=colour7

# pane number display
set -g display-panes-active-colour colour7
set -g display-panes-colour colour0

# clock
setw -g clock-mode-colour colour12
set -g clock-mode-style 12
#}}}

# status bar {{{
set -g status-position top
set -g status-style "none"
set -g status-justify "left"
set -g status-left-style "none"
set -g status-left-length "80"
set -g status-right-style "none"
set -g status-right-length "80"
setw -g window-status-activity-style "none"
setw -g window-status-style "none"
setw -g window-status-separator ""

set -g status-left ""
set -g status-right "#[fg=colour12]#S#[fg=colour241]@#h"

setw -g window-status-current-format "#[nobold]#[fg=colour241, bg=colour0][#[fg=colour12]#I #W#[fg=colour241]#{?window_flags,#{window_flags},}]"
setw -g window-status-format "#[fg=colour241, bg=colour0][#I #W#{?window_flags,#{window_flags},}]"
#}}}

set-window-option -g aggressive-resize off
